#!/bin/bash

# === Configuration ===
YTDLP="$HOME/install_me/yt-dlp" # Path to manually downloaded yt-dlp
SAVE_DIR="$HOME/Downloads/mp3s" # Define output directory
URL="$1"

# === Color Definitions ===
RED="\e[31m"
GREEN="\e[32m"
YELLOW="\e[33m"
CYAN="\e[36m"
RESET="\e[0m"

# === Spinner ===
show_spinner() {
    local pid=$!
    local spin='‚óê‚óì‚óë‚óí‚óê‚óì‚óë‚óí'
    local i=0

    while kill -0 $pid 2>/dev/null; do
        i=$(( (i+1) % 4 ))
        printf "\r${CYAN}üí´ Downloading... ${GREEN}${spin:$i:1}${RESET} "
        # ‚ú® or üöÄ
        sleep 0.15
    done
}

# === Error Exit ===
error_exit() {
    echo -e "${RED}‚ùå Error: $1${RESET}"
    exit 1
}

# === Validate YouTube URL ===
is_valid_youtube_url() {
    local url="$1"
    local regex='^(https?://)?(www\.)?(youtube\.com/(watch\?v=|embed/|v/|.+\?v=)|youtu\.be/|youtube-nocookie\.com/(embed/|watch\?v=))([a-zA-Z0-9_-]{11})(\?[^[:space:]]*)?$'

    if [[ "$url" =~ $regex ]]; then
        return 0
    else
        return 1
    fi
}

# === Main Logic ===
[[ -z "$URL" ]] && error_exit "üôÖ‚Äç‚ôÇÔ∏è No URL provided!"

if ! is_valid_youtube_url "$URL"; then
    error_exit "üëæ Invalid YouTube URL provided!"
fi

# 1. Get title from YouTube
TITLE=$("$YTDLP" --get-title "$URL")
CLEANED_TITLE=$(echo "$TITLE" \
        | sed -E 's/\(.*\)|\[.*\]//g' \
        | sed -E 's/^[[:space:]]+|[[:space:]]+$//g' \
        | sed -E 's/^(.*) - (.*)$/\2 - \1/' \
        | sed 's#[/:*?"<>|]##g' \
        | sed $'s/`/'\''/g' \
        | sed -E 's/^([^-]*) - (.*)$/\L\1\E - \2/' \
        | sed -E 's/^(.)/\U\1/' \
    )

echo -e "\n${GREEN}${CLEANED_TITLE}${RESET}\n"

mkdir -p "$SAVE_DIR"     # Ensure directory exists
cd "$SAVE_DIR" || exit 1 # Switch to download folder

[[ ! -x "$YTDLP" ]] && error_exit "üö´ yt-dlp not found or not executable at $YTDLP"

# === Auto-update yt-dlp if it's older than 23 days ===
if [[ -x "$YTDLP" ]]; then
    # Get last modification time in epoch seconds (works on GNU/Linux)
    last_modified=$(stat -c %Y "$YTDLP")
    now=$(date +%s)
    age_days=$(( (now - last_modified) / 86400 ))

    if (( age_days > 23 )); then
        echo "üîÑ yt-dlp is older than 23 days ($age_days days). Updating..."
        "$YTDLP" -U || echo "‚ö†Ô∏è Auto-update failed, continuing with old version..."
    fi
else
    echo "‚ùå yt-dlp not found or not executable at $YTDLP"
    exit 1
fi

# === Download using yt-dlp ===
echo -e "${YELLOW}‚¨áÔ∏è Downloading MP3...${RESET}"

"$YTDLP" -x \
    --audio-format mp3 \
    --embed-thumbnail \
    --audio-quality 0 \
    --output "$SAVE_DIR/${CLEANED_TITLE}.%(ext)s" \
    "$URL" &

show_spinner

# === Success Message ===
echo -e "\n\n‚úÖ ${YELLOW}$CLEANED_TITLE ${GREEN}successfully downloaded! Saved in: $SAVE_DIR üé∂${RESET}"

# === Change Directory to SAVE_DIR in a shell ===
echo -e "\n${CYAN}üí° To navigate to download folder, run: ${YELLOW}cd '$SAVE_DIR'${RESET}"
